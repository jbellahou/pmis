@{Layout = "_Layout.cshtml";}

@{
    var db = Database.Open("pmis");
    string successMsg = "";
    string errMsg = "Unknown error.";
    int success = 0;
    if (IsPost)
    {
        switch (Request.Form["SaveType"])
        {
            case "Delete":
                try
                {
                    db.Execute("delete from document_users where document_id=@0", Request.Form["did"]);
                    db.Execute("delete from internal_tools where id=@0", Request.Form["did"]);
                    db.Execute("delete from external_documents where id=@0", Request.Form["did"]);
                    db.Execute("delete from manual_documents where id=@0", Request.Form["did"]);
                    db.Execute("delete from process_documents where proj_doc_id in (select id from project_documents where document_id=@0)", Request.Form["did"]);
                    db.Execute("delete from project_documents where document_id=@0", Request.Form["did"]);
                    success = db.Execute("delete from documents where id=@0", Request.Form["did"]);
                    successMsg = "Document deleted.";
                }
                catch (Exception ex)
                {
                    errMsg = ex.Message.ToString();
                }
                break;
            case "Add External Document":
                try
                {
                    TimeZoneInfo targetZone = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");
                    DateTime newDT = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, targetZone);
                    success = db.Execute("insert into documents (organization_id, document_name, document_date, document_type) values (@0, @1, @2, @3)", Request.QueryString["id"], Request.Form["dname"], newDT, "External Document");
                    decimal docId = db.GetLastInsertId();
                    successMsg = "External Document Created.";
                    db.Execute("insert into external_documents (id, url) values (@0, @1)", docId, Request.Form["durl"]);
                    db.Execute("insert into document_users (user_id, document_id) values (@0, @1)", WebSecurity.CurrentUserId, docId);
                }
                catch (Exception ex)
                {
                    success = 0;
                    errMsg = ex.Message.ToString();
                }
                break;
            case "Add Manual Document":
                try
                {
                    Response.AddHeader("X-XSS-Protection", "0");
                    TimeZoneInfo targetZone = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");
                    DateTime newDT = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, targetZone);
                    success = db.Execute("insert into documents (organization_id, document_name, document_date, document_type) values (@0, @1, @2, @3)", Request.QueryString["id"], Request.Form["dname"], newDT, "Manual Document");
                    decimal docId = db.GetLastInsertId();
                    successMsg = "Manual Document Created.";
                    db.Execute("insert into manual_documents (id, document_text) values (@0, @1)", docId, Request.Unvalidated().Form["dtext"]);
                    db.Execute("insert into document_users (user_id, document_id) values (@0, @1)", WebSecurity.CurrentUserId, docId);
                }
                catch (Exception ex)
                {
                    success = 0;
                    errMsg = ex.Message.ToString();
                }
                break;
        }
    }
    string selectQueryString = "select * from documents where organization_id=@0 order by document_name";
}

@if (IsPost)
{
    if (success > 0)
    {
        <div class="alert alert-success" role="alert"><strong>@successMsg</strong></div>
    }
    else
    {
        <div class="alert alert-danger" role="alert"><strong>Error: </strong>@errMsg</div>
    }
}

<div class="container">
    <div class="pmis-detail-page-heading">
        <h3 class="pmis-detail-page-title">Organization Documents</h3>
        <a href="add-document-1?id=@Request.QueryString["id"]" class="pmis-detail-page-new-link" title="New Document"><i class="fas fa-plus"></i></a>
    </div>
    <div class="table-responsive">
        <table class="table table-hover sticky-table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Created</th>
                    <th>Type</th>
                    <th>Deployed on Projects</th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var row in db.Query(selectQueryString, Request.QueryString["id"]))
                {
                    List<string> projectList = new List<string>();
                    foreach (var projRow in db.Query("select project_name from projects p join project_documents pd on pd.project_id=p.id where pd.document_id=@0", row.id))
                    {
                        projectList.Add(projRow.project_name);
                    }
                    string projects = string.Join(", ", projectList.ToArray());
                    string dType = row.document_type;
                    string docUrl = "";
                <tr>
                    <td>@row.document_name</td>
                    <td>@row.document_date</td>
                    <td>@row.document_type</td>
                    <td>@projects</td>
                    <td>
                        @switch (dType)
                        {
                            case "External Document":
                                docUrl = db.QueryValue("select url from external_documents where id=@0", row.id);
                                break;
                            case "Internal Tool":
                                string intTool = db.QueryValue("select code_file from internal_tools where id=@0", row.id);
                                docUrl = @Href(intTool);
                                break;
                            case "Manual Document":
                                string manDoc = "~/document/view?id=" + row.id;
                                docUrl = @Href(manDoc);
                                break;
                        }
                        <a class="btn btn-primary" role="button" href='@docUrl' title="View" target="_blank"><i class="fas fa-eye"></i></a>
                    </td>
                    <td>
                        <form method="post" action="document-users?id=@Request.QueryString["id"]">
                            <input type="hidden" name="did" value="@row.id" />
                            <button class="btn btn-primary" type="submit" title="Manage User Access"><i class="fas fa-users"></i></button>
                        </form>
                    </td>
                    <td>
                        <form method="post" action="documents?id=@Request.QueryString["id"]">
                            <input type="hidden" name="did" value="@row.id" />
                            <button class="btn btn-primary" type="submit" onclick="return confirm('Are you sure?')" title="Delete" name="SaveType" value="Delete"><i class="fas fa-trash-alt"></i></button>
                        </form>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>